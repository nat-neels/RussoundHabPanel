<!--- This is the raw json file for the Russound.widget.json file and any changes must be made in that file as well ------------------------------------------------------->		

<style ng-if="config.vertical_layout === true">
	.russound-{{config.panel_id}} .nowplaying { display: grid; grid-template-columns: 1fr; grid-template-rows: auto auto 1fr auto auto auto; grid-column-gap: 5px; grid-row-gap: 5px;  text-align: center;
		grid-template-areas: 
			"zoneOverview"
			"contentOverview" 
			"contentInfo" 
			"contentActions" 
			"zoneVolume" 
			"zoneSrc"; 
		}

</style>

<style ng-if="config.vertical_layout === false">
	.russound-{{config.panel_id}} .nowplaying { display: grid; grid-template-columns: 3fr 5fr; grid-template-rows: auto 1fr auto auto auto; grid-column-gap: 5px; grid-row-gap: 5px;  text-align: center;
		grid-template-areas: 
			"contentOverview zoneOverview" 
			"contentOverview contentInfo" 
			"contentOverview contentActions" 
			"contentOverview zoneVolume" 
			"contentOverview zoneSrc"; 
		}
		
</style>

<style>
	.russoundtop { display: grid; grid-template-columns: 1fr; grid-template-rows: 1fr; height: 100%; }
	.russound-{{config.panel_id}} { padding: 5px; display: grid; grid-template-columns: 1fr; grid-template-rows: 1fr; }

	.russound-{{config.panel_id}} .title { flex: 0 0 auto; display: flex; flex-direction: row; align-items: center; }
	.russound-{{config.panel_id}} .title.well { background-color: inherit; border-radius: 10px; }
	.russound-{{config.panel_id}} .title .titleText { flex: 1 1 auto; text-align: center; font-size: 24px; }
	.russound-{{config.panel_id}} .title .titleText { flex: 1 1 auto; text-align: center; font-size: 20px; }
	.russound-{{config.panel_id}} .title .titleText span { display: inline-block; margin-left: 15px; }
	.russound-{{config.panel_id}} .title .closeButton { flex: 0 0 auto; }
	
	.russound-{{config.panel_id}} .flexTable { flex: 1 1 10px; margin-top: 15px; padding-right: 5px; display: flex; flex-direction: column; overflow: auto; }
	.russound-{{config.panel_id}} .flexRowFirst { border-top: 1px solid gray; }
	.russound-{{config.panel_id}} .flexRow { border-bottom: 1px solid gray; padding-top: 5px; padding-bottom: 5px; flex: 0 0 auto; display: flex; flex-direction: row; align-items: center; }
	
	.russound-{{config.panel_id}} .clickable { border-radius: 6px; cursor: pointer; padding: 5px; margin: 0px 5px; }
	.russound-{{config.panel_id}} .clickable.nopadding { padding: 0px; }
	.russound-{{config.panel_id}} .clickable:hover { background-color: #337ab7; border-radius: 6px; }
	
	.russound-{{config.panel_id}} button:disabled .glyphicon { color: gray; }
	.russound-{{config.panel_id}} button { border-radius: 5px; }
	.russound-{{config.panel_id}} .toggleOn { background-color: #286090; }
	
	.russound-{{config.panel_id}} .dialog { border: 1px solid lightgray; background-color: gray; padding: 15px; flex: 1 1 auto; display:flex; flex-direction: column; justify-content: center; }

	.russound-{{config.panel_id}} .configInvalid { font-size: 20px; color: yellow; flex: 1 1 auto; display:flex; align-items: center;}
	
	.russound-{{config.panel_id}} .nowplaying .zoneOverview { display: grid; grid-template-columns: auto 1fr auto; font-size:24px; grid-area: zoneOverview; }
	.russound-{{config.panel_id}} .nowplaying .zoneOverview .zonePower { font-size: 24px; max-width: 100%; max-height: 100% }
	.russound-{{config.panel_id}} .nowplaying .zoneOverview .zoneName { text-align: left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;}
	.russound-{{config.panel_id}} .nowplaying .zoneOverview .audiooptions { width: 1.25em; height: 1.25em; }
	
	.russound-{{config.panel_id}} .nowplaying .nowPlayingContentOverview { grid-area: contentOverview; max-width:100%; min-width: 100px; min-height: 100px;}
	.russound-{{config.panel_id}} .nowplaying .nowPlayingContentInfo { grid-area: contentInfo;  display: grid; grid-template-columns: auto 1fr auto; align-items: center; grid-column-gap: 10px; }
	
	.russound-{{config.panel_id}} .nowplaying .nowPlayingContentInfo .srcInfo {white-space: nowrap; display: grid; grid-template-rows: 1fr; }
	.russound-{{config.panel_id}} .nowplaying .nowPlayingContentInfo .srcInfo .srcInfoLine { overflow: hidden; text-overflow: ellipsis; color: gray; }
	.russound-{{config.panel_id}} .nowplaying .nowPlayingContentInfo .srcInfo .srcInfoLine.highlight { color: white; }
	
	.russound-{{config.panel_id}} .nowplaying .nowPlayingContentActions { grid-area: contentActions; display: grid; grid-auto-flow: column; font-size: 20px; }	
	.russound-{{config.panel_id}} .nowplaying .nowPlayingContentActions .randomOn { color: #00FFFF }
	.russound-{{config.panel_id}} .nowplaying .nowPlayingContentActions img { width: 1.5em; height: 1.5em; }
	
	.russound-{{config.panel_id}} .nowplaying .srcMisc { display: grid; grid-template-columns: auto 1fr auto; grid-area: zoneSrc;}
	.russound-{{config.panel_id}} .nowplaying .srcMisc .srcMiddle>div { display: inline-block; }
	.russound-{{config.panel_id}} .nowplaying .srcMisc .srcMiddle .srcIcon { margin-right: 5px; }
	
	.russound-{{config.panel_id}} .nowplaying .noPower { display: inline-block; font-size: larger; }
	.russound-{{config.panel_id}} .nowplaying .noPower>div { display: inline-block; font-size: larger; }
	.russound-{{config.panel_id}} .nowplaying .noPower .noPowerText { margin-top: 30px;}

	.russound-{{config.panel_id}} .nowplaying.tuner .channelArea { display: grid; grid-template-columns: 1fr; grid-template-rows: auto 1fr auto;padding: 10px; border-radius: 10px; border: 1px solid gray; }
	.russound-{{config.panel_id}} .nowplaying.tuner .channelArea .tunerinfo { margin-top: 15px; color: gray; min-height: 100px; color: gray; text-align: center; overflow: hidden; white-space:nowrap; text-overflow: ellipsis; }
	.russound-{{config.panel_id}} .nowplaying.tuner .channelArea .tunerinfo>div { overflow: hidden; text-overflow: ellipsis; }
	.russound-{{config.panel_id}} .nowplaying.tuner .channelArea .tunerinfo .programservicename { margin-top: 15px; }
	.russound-{{config.panel_id}} .nowplaying.tuner .channel { font-size: 30px }
	.russound-{{config.panel_id}} .nowplaying.tuner .radioActions { display: flex; flex-direction: column; flex: 0 1 auto; align-items: center; }
	.russound-{{config.panel_id}} .nowplaying.tuner .radioActions .mainActions { display: flex; flex-direction: row; flex: 1 1 auto; align-items: baseline; }
	.russound-{{config.panel_id}} .nowplaying.tuner .radioActions .advancedOptions { display: flex; flex-direction: row; flex: 1 1 auto; align-items: center; font-size: 16px;}
	.russound-{{config.panel_id}} .nowplaying.tuner .radioActions .advancedOptions img { height: 1.5em; width: 1.5em; }
	.russound-{{config.panel_id}} .nowplaying.tuner .radioActions .toggleIcon { font-size:12px; }
	.russound-{{config.panel_id}} .nowplaying.tuner .radioBankArea { margin-top: 5px; display: flex; flex-direction: column; flex: 0 1 auto; align-items: stretch; }
	.russound-{{config.panel_id}} .nowplaying.tuner .radioBankArea .banks { display: flex; flex-direction: row; flex: 0 1 auto; align-items: baseline; }
	.russound-{{config.panel_id}} .nowplaying.tuner .radioBankArea .banks .selectedBank { flex: 1 1 auto; text-align: left; }
	.russound-{{config.panel_id}} .nowplaying.tuner .radioBankArea .presets { display: flex; flex-flow: row wrap; flex: 0 1 auto; align-items: flex-start; }
	.russound-{{config.panel_id}} .nowplaying.tuner .radioBankArea .presets button { margin: 2px; font-size: 10px; }

	.russound-{{config.panel_id}} .nowplaying .zoneVolume { margin-top: 0px; grid-area: zoneVolume;}

	
	.russound-{{config.panel_id}} .audioSettings { display: flex; flex-direction: column; flex: 0 1 auto; }
	.russound-{{config.panel_id}} .audioSettings .audioRow .setting { flex: 0 0 100px; text-align: left; }
	.russound-{{config.panel_id}} .audioSettings .audioRow .value { flex: 1 1 auto; text-align: left; }

	.russound-{{config.panel_id}} .srcSelection { display: flex; flex-direction: column; flex: 0 1 auto; }
	.russound-{{config.panel_id}} .srcSelection .sources .sourcesInfo .srcName { flex: 1 1 auto; text-align: left; margin-left: 10px;}
		
	.russound-{{config.panel_id}} .zoneSelection { display: flex; flex-direction: column; flex: 0 1 auto; }
	.russound-{{config.panel_id}} .zoneSelection .zones .zonesInfo .zoneName { flex: 1 1 auto; text-align: left; margin-left: 10px;}
		
	.russound-{{config.panel_id}} .sysFavorites { display: flex; flex-direction: column; flex: 0 1 auto; }
	.russound-{{config.panel_id}} .sysFavorites .favorites { flex: 1 1 auto; display: flex; flex-direction: column; padding: 10px; }
	.russound-{{config.panel_id}} .sysFavorites .favorites .addFavorite { flex: 0 1 auto; }
	.russound-{{config.panel_id}} .sysFavorites .favorites .addFavorite .addFavoriteTitle { text-align: left; color: yellowgreen; }

	.russound-{{config.panel_id}} .sysFavorites .favorites .addFavorite .addFavoriteArea { flex: 1 1 auto; display:flex; flex-flow: row wrap; align-items: center; }
	.russound-{{config.panel_id}} .sysFavorites .favorites .addFavorite input, .russound-{{config.panel_id}} .sysFavorites .addFavorite select { color: black; }
	.russound-{{config.panel_id}} .sysFavorites .favorites .addFavorite input { flex: 1 1 auto; }
	.russound-{{config.panel_id}} .sysFavorites .favorites .addFavorite span { display: inline-block; margin: 0px 5px; }
	.russound-{{config.panel_id}} .sysFavorites .favoritesInfoNone { margin-top: 25px; text-align: center; width: 100%; font-size:30px}
	.russound-{{config.panel_id}} .sysFavorites .favoritesInfo { margin-top: 25px; padding: 0 5px; }
	.russound-{{config.panel_id}} .sysFavorites .favoritesInfo .favId { padding: 0 5px; }
	.russound-{{config.panel_id}} .sysFavorites .favoritesInfo .favName { flex: 1 1 auto; text-align: left; }

	.russound-{{config.panel_id}} .favoriteDialog .confirmMessage { font-size: 20px; }
	.russound-{{config.panel_id}} .favoriteDialog .confirmMessage .confirmName { color: yellow; }
	.russound-{{config.panel_id}} .favoriteDialog .confirmMessage .confirmId { color: yellow; }

	.russound-{{config.panel_id}} .favoriteDialog .overwriteMessage { margin-top: 15px; font-style: italic; }
	.russound-{{config.panel_id}} .favoriteDialog .overwriteMessage .overwriteName { color: yellow; }

	.russound-{{config.panel_id}} .favoriteDialog .actionMessage { margin-top: 15px; font-style: italic; }
	.russound-{{config.panel_id}} .favoriteDialog .actionMessage .actionMessageId { color: yellow; }

	.russound-{{config.panel_id}} .favoriteDialog .buttonArea { margin-top: 15px; }
	.russound-{{config.panel_id}} .favoriteDialog .buttonArea .btn { margin-right: 20px; }

	.russound-{{config.panel_id}} .overwriteFavoriteDialog .overwriteNewName { color: black; margin-top: 15px }
	
	.russound-{{config.panel_id}} .radioKeyPad { display: flex; flex-direction: column; flex: 0 1 auto; }
	.russound-{{config.panel_id}} .radioKeyPad .keyPadArea { margin-top: 15px; display: flex; flex-direction: column; align-items: center; }
	.russound-{{config.panel_id}} .radioKeyPad .keyPadArea .keyPad { display:flex; flex-flow: row wrap; justify-content: space-around; align-items: center; width: 175px; margin: 25px 0px;}
	.russound-{{config.panel_id}} .radioKeyPad .keyPadArea .btn { min-width: 50px; margin-top: 5px; margin-left: 5px;}
	
	.russound-{{config.panel_id}} .configureBanksDialog { display: flex; flex-direction: column; flex: 0 1 auto; }
	.russound-{{config.panel_id}} .configureBanksDialog input { color: black; }
	.russound-{{config.panel_id}} .configureBanksDialog .bankArea .bankActions { text-align: left; }
	.russound-{{config.panel_id}} .configureBanksDialog .bankArea .bankActions>div { display:inline-block; }
	.russound-{{config.panel_id}} .configureBanksDialog .bankArea .bankActions .rightBank { margin-right: 10px; }
	.russound-{{config.panel_id}} .configureBanksDialog .bankArea .bankActions .selectedBank { margin-right: 10px; }
	.russound-{{config.panel_id}} .configureBanksDialog .presetArea { display: flex; flex-direction: column; flex: 0 1 auto; }
	.russound-{{config.panel_id}} .configureBanksDialog .presetArea .presetRow .presetId { width: 15px; }
	.russound-{{config.panel_id}} .configureBanksDialog .presetArea .presetRow .presetName { flex: 1 1 auto; text-align: left }

	.russound-{{config.panel_id}} .presetDialog .confirmMessage { font-size: 20px; }
	.russound-{{config.panel_id}} .presetDialog .confirmMessage .confirmName { color: yellow; }
	.russound-{{config.panel_id}} .presetDialog .confirmMessage .confirmId { color: yellow; }

	.russound-{{config.panel_id}} .presetDialog .overwriteMessage { margin-top: 15px; font-style: italic; }
	.russound-{{config.panel_id}} .presetDialog .overwriteMessage .overwriteName { color: yellow; }

	.russound-{{config.panel_id}} .presetDialog .actionMessage { margin-top: 15px; font-style: italic; }
	.russound-{{config.panel_id}} .presetDialog .actionMessage .actionMessageId { color: yellow; }

	.russound-{{config.panel_id}} .presetDialog .buttonArea { margin-top: 15px; }
	.russound-{{config.panel_id}} .presetDialog .buttonArea .btn { margin-right: 20px; }
	
	.russound-{{config.panel_id}} .overwritePresetDialog .overwriteNewName { color: black; margin-top: 15px; }

	.russound-{{config.panel_id}} .mmscreen .mmmenuarea.waiting { display:none; }
	.russound-{{config.panel_id}} .mmscreen .mmmenuarea .menuitem .menuIcon { width: 32px; }
	.russound-{{config.panel_id}} .mmscreen .mmmenuarea .menuitem .menuText { flex: 1 1 auto; text-align: left; }
	.russound-{{config.panel_id}} .mmscreen .mmmenuarea .menuitem .menuStatus { width: 16px; }
	
	.russound-{{config.panel_id}} .mmscreen { display: flex; flex-direction: column; flex: 0 1 auto; }
	.russound-{{config.panel_id}} .mmscreen .buttonArea { flex: 0 0 auto; margin-top: 15px; display: flex; flex-direction: row; justify-content: center; }
	.russound-{{config.panel_id}} .mmscreen .buttonArea button { margin: 0px 5px; }
	.russound-{{config.panel_id}} .mmscreen .buttonArea.waiting { display:none; }
	.russound-{{config.panel_id}} .mmscreen .buttonArea .leftButtonArea { flex: 1 1 auto; display:flex; flex-direction: row; justify-content: flex-start; }
	.russound-{{config.panel_id}} .mmscreen .buttonArea .rightButtonArea { flex: 1 1 auto; display:flex; flex-direction: row; justify-content: flex-end;}

	.russound-{{config.panel_id}} .mmmenu .mmmenuarea .menuitem { height: 32px; }
	
	.russound-{{config.panel_id}} .mmentry input { color: black; }
	.russound-{{config.panel_id}} .mmentry input:disabled { background-color: gray; }
	.russound-{{config.panel_id}} .mmentry .formitem2 { margin-top: 15px; }
		
	@keyframes marquee {
    0%   { text-indent: 100% }
    100% { text-indent: -100% }
	}

</style>
<div class="russoundtop" oc-lazy-load="['/static/Russound/RussoundApp.js']">
	<div class="russound-{{config.panel_id}}" ng-controller="RussoundCtrl as russ">
<!------------------------------------------------------- Not online? ------------------------------------------------------------->		
		<div class="configInvalid" ng-if="russ.page.isPage('none') ">
			No response from openHAB - Russound system may be offline
		</div>
<!------------------------------------------------------- Invalid Configuration ------------------------------------------------------------->		
		<div class="configInvalid" ng-if="russ.page.isPage('configInvalid') ">
			The settings are invalid.	 Please make sure you select a zone name channel and the channel ID must be of the format 'russound.zone.{system id}.{controller id}.{zone id}.name'
		</div>
<!------------------------------------------------------- Header/Power ------------------------------------------------------------->		
		<div class="nowplaying {{ russ.page.subid }}" ng-if="russ.page.isPage('nowplaying')">
			<div class='zoneOverview'>
				<div class='zonePower clickable glyphicon glyphicon-off' ng-click="sendCmd(russ.sysInfo.getZoneChannel('status'), itemValue(russ.sysInfo.getZoneChannel('status')) == 'ON' ? 'OFF' : 'ON')" ng-style="itemValue(russ.sysInfo.getZoneChannel('status')) == 'ON' ? {'color': 'green'} : {'color': 'red'}"></div>
				<!-- need to use ng-if here because ng-click won't allow conditions on config.zone_lock and ng-disable doesn't prevent ng-click -->
				<div class="zoneName clickable nopadding" ng-bind="itemValue(russ.sysInfo.getZoneChannel('name'))" ng-if='!config.zone_lock' ng-click="russ.page.setPage('zoneSelection')"></div>
				<div class="zoneName" ng-bind="itemValue(russ.sysInfo.getZoneChannel('name'))" ng-if='config.zone_lock'></div>
				<img class="audiooptions clickable" src="/static/Russound/images/audiooptions.png" ng-click="russ.page.setPage('audio')"/>
			</div>

<!------------------------------------------------------- No Power ------------------------------------------------------------->		
			<div class='noPower nowPlayingContent nowPlayingContentInfo' ng-if="russ.page.isSubPage('nopower')">
				<div class="noPowerText">This zone is off.</div>
			</div>

<!------------------------------------------------------- No Source Mode (Unknown) ------------------------------------------------------------->		
			<img class="nowPlayingContentOverview srcCoverArt"  ng-if="russ.page.isSubPage('unknown')" ng-src="{{russ.nowplaying.coverArtUrl}}"/>
			<div class='nomode nowPlayingContent nowPlayingContentInfo' ng-if="russ.page.isSubPage('unknown')">
				<img class="srcIcon" src="/static/Russound/images/unknown.png"/>
				<div class="srcInfo">
					No source selected.  Press:
				</div>
				
				<div class="clickable srcMenu glyphicon glyphicon-menu-hamburger" ng-click="russ.mm.init()"></div>
			</div>
<!------------------------------------------------------- Now Playing (Radio) ------------------------------------------------------------->		
			<div class="channelArea nowPlayingContentOverview" ng-if="russ.page.isSubPage('tuner')">
				<div class="channel" ng-bind="itemValue(russ.sysInfo.getSourceChannel('channel'))" ng-click="russ.page.setPage('radioKeyPad')"></div>
				<div class="tunerinfo">
					<div class="programservicename" ng-bind="itemValue(russ.sysInfo.getSourceChannel('programservicename'))"></div>
					<div class="radiotext radiotext1" ng-bind="itemValue(russ.sysInfo.getSourceChannel('radiotext'))"></div>
					<div class="radiotext radiotext2" ng-bind="itemValue(russ.sysInfo.getSourceChannel('radiotext2'))" ng-if="russ.sysInfo.isValidChannel(russ.sysInfo.getSourceChannel('radiotext2'))"></div>
					<div class="radiotext radiotext3" ng-bind="itemValue(russ.sysInfo.getSourceChannel('radiotext3'))" ng-if="russ.sysInfo.isValidChannel(russ.sysInfo.getSourceChannel('radiotext3'))"></div>
					<div class="radiotext radiotext2" ng-bind="itemValue(russ.sysInfo.getSourceChannel('radiotext4'))" ng-if="russ.sysInfo.isValidChannel(russ.sysInfo.getSourceChannel('radiotext4'))"></div>
				</div>
				<div class="mainActions">
						<div class="clickable channelDown glyphicon glyphicon-minus" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'ChannelDown')" title="Channel Down"></div>
						<div class="clickable channelKeyPad glyphicon glyphicon-th" ng-click="russ.page.setPage('radioKeyPad')" title="Key Pad"></div>
						<div class="clickable channelUp glyphicon glyphicon-plus" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'ChannelUp')" title="Channel Down"></div>
				</div>
			</div>
			<div class="radioActions nowPlayingContentActions" ng-if="russ.page.isSubPage('tuner')">
				<div class="advancedOptions">
					<div class="clickable seek glyphicon glyphicon-search" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keycode'),'27')" title="Seek"></div>
					<div class="clickable scan glyphicon glyphicon-refresh" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keycode'),'70')" title="Scan"></div>
					<div class="clickable stop glyphicon glyphicon-stop" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keycode'),'58')" title="Stop Scan"></div>
					<img class="clickable mono clickable" src="/static/Russound/images/audiomono.png" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keycode'),'52')" title="Mono"/>
					<img class="clickable stereo clickable" src="/static/Russound/images/audiostereo.png" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keycode'),'51')" title="Stereo"/>
					<div class="clickable local glyphicon glyphicon-import" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keycode'),'66')" title="Local"></div>
					<div class="clickable distant glyphicon glyphicon-export" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keycode'),'67')" title="Distant"></div>
				</div>
			</div>
			<div class="radioBankArea nowPlayingContentInfo" ng-if="russ.page.isSubPage('tuner')">
				<div class="banks">
					<div class="clickable leftBank glyphicon glyphicon-chevron-left" ng-click="russ.banks.leftBank()"></div>
					<div class="clickable rightBank glyphicon glyphicon-chevron-right" ng-click="russ.banks.rightBank()"></div>
					<div class="clickable selectedBank" ng-bind="russ.lists.banks[russ.banks.bankId - 1].name" ng-click="russ.banks.editor.bankId = russ.banks.bankId; russ.banks.editor.bankName = russ.lists.banks[russ.banks.bankId - 1].name; russ.page.setPage('configureBanks')"></div>
					<!--<div class="configureBanks glyphicon glyphicon-wrench" ng-click="russ.banks.editor.bankId = russ.banks.bankId; russ.page.setPage('configureBanks')"></div>-->
				</div>
				<div class="presets">
					<button class="presetRow btn btn-primary" ng-repeat="presetId in russ.banks.presetIds" ng-click="russ.banks.handleAssign(presetId);">{{!config.override_presets && russ.lists.presets[presetId - 1].valid ? russ.lists.presets[presetId - 1].name : ($index + 1) }}</button>
				</div>
			</div>

<!------------------------------------------------------- Now Playing (AirPlay) ------------------------------------------------------------->		
			<img class="nowPlayingContentOverview srcCoverArt"  ng-if="russ.page.isSubPage('airplay')" ng-src="{{russ.nowplaying.coverArtUrl}}"/>
			<div class="nowPlayingContentInfo srcInfoArea" ng-if="russ.page.isSubPage('airplay')">
				<img class="srcIcon" src="/static/Russound/images/usb.png"/>
				<div class="srcInfo">
					<div class="srcInfoLine srcInfoChannelName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('channelname'))"></div>
					<div class="srcInfoLine srcInfoArtistName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('artistname'))"></div>
					<div class="srcInfoLine srcInfoAlbumName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('albumname'))"></div>
					<div class="srcInfoLine srcInfoSongName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('songname'))"></div>
				</div>
				
				<div class="clickable srcMenu glyphicon glyphicon-menu-hamburger" ng-click="russ.mm.init()"></div>
			</div>
			
			<div class="nowPlayingContentActions srcActions" ng-if="russ.page.isSubPage('airplay')">
				<div class="clickable glyphicon glyphicon-step-backward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Previous')"></div>
				<div ng-class="['clickable', 'glyphicon', { 'glyphicon-play' : russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('channelname')) }, { 'glyphicon-pause' : !russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }]" ng-click="russ.nowplaying.togglePlaying(russ.sysInfo.getSourceChannel('channelname'))"></div>
				<div class="clickable glyphicon glyphicon-step-forward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Next')"></div>
			</div>
			
<!------------------------------------------------------- Now Playing (Spotify) ------------------------------------------------------------->		
			<img class="nowPlayingContentOverview srcCoverArt" ng-if="russ.page.isSubPage('spotify')" ng-src="{{russ.nowplaying.coverArtUrl}}"/>
			<div class="nowPlayingContentInfo srcInfoArea" ng-if="russ.page.isSubPage('spotify')">
				<img class="srcIcon" src="/static/Russound/images/usb.png"/>
				<div class="srcInfo">
					<div class="srcInfoLine srcInfoChannelName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('channelname'))"></div>
					<div class="srcInfoLine srcInfoArtistName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('artistname'))"></div>
					<div class="srcInfoLine srcInfoAlbumName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('albumname'))"></div>
					<div class="srcInfoLine srcInfoSongName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('songname'))"></div>
				</div>
				
				<div class="clickable srcMenu glyphicon glyphicon-menu-hamburger" ng-click="russ.mm.init()"></div>
			</div>
		
			<div class="nowPlayingContentActions srcActions" ng-if="russ.page.isSubPage('spotify')">
				<div class="clickable glyphicon glyphicon-step-backward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Previous')"></div>
				<div ng-class="['clickable', 'glyphicon', { 'glyphicon-play' : russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('channelname')) }, { 'glyphicon-pause' : !russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }]" ng-click="russ.nowplaying.togglePlaying(russ.sysInfo.getSourceChannel('channelname'))"></div>
				<div class="clickable glyphicon glyphicon-step-forward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Next')"></div>
			</div>

<!------------------------------------------------------- Now Playing (Pandora) ------------------------------------------------------------->		
			<img class="nowPlayingContentOverview srcCoverArt" ng-if="russ.page.isSubPage('pandora')" ng-src="{{russ.nowplaying.coverArtUrl}}"/>
			<div class="nowPlayingContentInfo srcInfoArea" ng-if="russ.page.isSubPage('pandora')">
				<img class="srcIcon" src="/static/Russound/images/pandora.jpg"/>
				<div class="srcInfo">
					<div class="srcInfoLine srcInfoChannelName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('channelname'))"></div>
					<div class="srcInfoLine srcInfoArtistName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('artistname'))"></div>
					<div class="srcInfoLine srcInfoAlbumName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('albumname'))"></div>
					<div class="srcInfoLine srcInfoSongName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('songname'))"></div>
				</div>
				<div class="clickable srcMenu glyphicon glyphicon-menu-hamburger" ng-click="russ.mm.init()"></div>
			</div>
			<div class="nowPlayingContentActions srcActions" ng-if="russ.page.isSubPage('pandora')">
				<div class="clickable glyphicon glyphicon-thumbs-down" ng-click="sendCmd(russ.sysInfo.getZoneChannel('rating'),'OFF')"></div>
				<div class="clickable glyphicon glyphicon-thumbs-up" ng-click="sendCmd(russ.sysInfo.getZoneChannel('rating'),'ON')"></div>
				<div ng-class="['clickable', 'glyphicon', { 'glyphicon-play' : russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }, { 'glyphicon-pause' : !russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }]" ng-click="russ.nowplaying.togglePlaying(russ.sysInfo.getSourceChannel('playlistname'))"></div>
				<div class="clickable glyphicon glyphicon-step-forward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Next')"></div>
				<div class="clickable glyphicon glyphicon-th-list" ng-click="russ.mm.initContextMenu()"></div>
			</div>
			
<!------------------------------------------------------- Now Playing (Sirius XM) ------------------------------------------------------------->		
			<img class="nowPlayingContentOverview srcCoverArt" ng-if="russ.page.isSubPage('siriusxm')" ng-src="{{russ.nowplaying.coverArtUrl}}"/>
			<div class="nowPlayingContentInfo srcInfoArea" ng-if="russ.page.isSubPage('siriusxm')">
				<img class="srcIcon" src="/static/Russound/images/siriusxm.jpg"/>
				<div class="srcInfo">
					<div class="srcInfoLine srcInfoPlayListName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('playlistname'))"></div>
					<div class="srcInfoLine srcInfoArtistName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('artistname'))"></div>
					<div class="srcInfoLine srcInfoAlbumName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('albumname'))"></div>
					<div class="srcInfoLine srcInfoSongName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('songname'))"></div>
				</div>
				<div class="clickable srcMenu glyphicon glyphicon-menu-hamburger" ng-click="russ.mm.init()"></div>
			</div>
			<div class="nowPlayingContentActions srcActions" ng-if="russ.page.isSubPage('siriusxm')">
				<div class="clickable glyphicon glyphicon-step-backward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Previous')"></div>
				<div ng-class="['clickable', 'glyphicon', { 'glyphicon-play' : russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }, { 'glyphicon-pause' : !russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }]" ng-click="russ.nowplaying.togglePlaying(russ.sysInfo.getSourceChannel('playlistname'))"></div>
				<div class="clickable glyphicon glyphicon-step-forward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Next')"></div>
			</div>
			
<!------------------------------------------------------- Now Playing (TuneIn) ------------------------------------------------------------->		
			<img class="nowPlayingContentOverview srcCoverArt" ng-if="russ.page.isSubPage('tunein')" ng-src="{{russ.nowplaying.coverArtUrl}}"/>
			<div class="nowPlayingContentInfo srcInfoArea" ng-if="russ.page.isSubPage('tunein')">
				<img class="srcIcon" src="/static/Russound/images/tunein.png"/>
				<div class="srcInfo">
					<div class="srcInfoLine srcInfoPlayListName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('playlistname'))"></div>
					<div class="srcInfoLine srcInfoChannelName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('channelname'))"></div>
					<div class="srcInfoLine srcInfoArtistName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('artistname'))"></div>
					<div class="srcInfoLine srcInfoSongName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('songname'))"></div>
				</div>
				<div class="clickable srcMenu glyphicon glyphicon-menu-hamburger" ng-click="russ.mm.init()"></div>
			</div>
			<div class="nowPlayingContentActions srcActions" ng-if="russ.page.isSubPage('tunein')">
				<div class="clickable glyphicon glyphicon-step-backward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Previous')"></div>
				<div ng-class="['clickable', 'glyphicon', { 'glyphicon-play' : russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }, { 'glyphicon-pause' : !russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }]" ng-click="russ.nowplaying.togglePlaying(russ.sysInfo.getSourceChannel('playlistname'))"></div>
				<div class="clickable glyphicon glyphicon-step-forward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Next')"></div>
			</div>

<!------------------------------------------------------- Now Playing (vTuner) ------------------------------------------------------------->		
			<img class="nowPlayingContentOverview srcCoverArt" ng-if="russ.page.isSubPage('internet radio')" ng-src="{{russ.nowplaying.coverArtUrl}}"/>
			<div class="nowPlayingContentInfo srcInfoArea" ng-if="russ.page.isSubPage('internet radio')">
				<img class="srcIcon" src="/static/Russound/images/internetradio.png"/>
				<div class="srcInfo">
					<div class="srcInfoLine srcInfoPlayListName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('playlistname'))"></div>
					<div class="srcInfoLine srcInfoChannelName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('channelname'))"></div>
					<div class="srcInfoLine srcInfoArtistName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('artistname'))"></div>
					<div class="srcInfoLine srcInfoSongName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('songname'))"></div>
				</div>
				<div class="clickable srcMenu glyphicon glyphicon-menu-hamburger" ng-click="russ.mm.init()"></div>
			</div>
			<div class="nowPlayingContentActions srcActions" ng-if="russ.page.isSubPage('internet radio')">
				<div class="clickable glyphicon glyphicon-step-backward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Previous')"></div>
				<div ng-class="['clickable', 'glyphicon', { 'glyphicon-play' : russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }, { 'glyphicon-pause' : !russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }]" ng-click="russ.nowplaying.togglePlaying(russ.sysInfo.getSourceChannel('playlistname'))"></div>
				<div class="clickable glyphicon glyphicon-step-forward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Next')"></div>
			</div>

<!------------------------------------------------------- Now Playing (DLNA) ------------------------------------------------------------->		
			<img class="nowPlayingContentOverview srcCoverArt" ng-if="russ.page.isSubPage('media server')" ng-src="{{russ.nowplaying.coverArtUrl}}"/>
			<div class="nowPlayingContentInfo srcInfoArea" ng-if="russ.page.isSubPage('media server')">
				<img class="srcIcon" src="/static/Russound/images/dlna.png"/>
				<div class="srcInfo">
					<div class="srcInfoLine srcInfoPlayListName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('playlistname'))"></div>
					<div class="srcInfoLine srcInfoArtistName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('artistname'))"></div>
					<div class="srcInfoLine srcInfoAlbumName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('albumname'))"></div>
					<div class="srcInfoLine srcInfoSongName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('songname'))"></div>
				</div>
				<div class="clickable srcMenu glyphicon glyphicon-menu-hamburger" ng-click="russ.mm.init()"></div>
			</div>
			<div class="nowPlayingContentActions srcActions" ng-if="russ.page.isSubPage('media server')">
				<img ng-class="['clickable', { repeatOn : russ.nowplaying.isRepeat }]" ng-src="{{ russ.nowplaying.repeatModeIcon }}" ng-click="russ.nowplaying.toggleRepeatMode(true)"/>
				<div class="clickable glyphicon glyphicon-step-backward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Previous')"></div>
				<div ng-class="['clickable', 'glyphicon', { 'glyphicon-play' : russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }, { 'glyphicon-pause' : !russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }]" ng-click="russ.nowplaying.togglePlaying(russ.sysInfo.getSourceChannel('playlistname'))"></div>
				<div class="clickable glyphicon glyphicon-step-forward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Next')"></div>
				<div ng-class="['clickable','glyphicon','glyphicon-random',{'randomOn': russ.nowplaying.isShuffle}]" uib-btn-checkbox ng-model="russ.nowplaying.isShuffle" btn-checkbox-true="true" btn-checkbox-false="false" ng-click="russ.nowplaying.toggleShuffleMode()"></div>
			</div>

<!------------------------------------------------------- Now Playing (USB) ------------------------------------------------------------->		
			<img class="nowPlayingContentOverview srcCoverArt" ng-if="russ.page.isSubPage('usb')" ng-src="{{russ.nowplaying.coverArtUrl}}"/>
			<div class="nowPlayingContentInfo srcInfoArea" ng-if="russ.page.isSubPage('usb')">
				<div><img class="srcIcon" src="/static/Russound/images/usb.png"/></div>
				<div class="srcInfo">
					<div class="srcInfoLine srcInfoPlayListName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('playlistname'))"></div>
					<div class="srcInfoLine srcInfoArtistName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('artistname'))"></div>
					<div class="srcInfoLine srcInfoAlbumName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('albumname'))"></div>
					<div class="srcInfoLine srcInfoSongName highlight" ng-bind="itemValue(russ.sysInfo.getSourceChannel('songname'))"></div>
				</div>
				<div class="clickable srcMenu glyphicon glyphicon-menu-hamburger" ng-click="russ.mm.init()"></div>
			</div>
			<div class="nowPlayingContentActions srcActions" ng-if="russ.page.isSubPage('usb')">
				<img ng-class="['clickable', { repeatOn : russ.nowplaying.isRepeat }]" ng-src="{{ russ.nowplaying.repeatModeIcon }}" ng-click="russ.nowplaying.toggleRepeatMode(true)"/>
				<div class="clickable glyphicon glyphicon-step-backward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Previous')"></div>
				<div ng-class="['clickable', 'glyphicon', { 'glyphicon-play' : russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }, { 'glyphicon-pause' : !russ.nowplaying.isPaused(russ.sysInfo.getSourceChannel('playlistname')) }]" ng-click="russ.nowplaying.togglePlaying(russ.sysInfo.getSourceChannel('playlistname'))"></div>
				<div class="clickable glyphicon glyphicon-step-forward" ng-click="sendCmd(russ.sysInfo.getZoneChannel('keyrelease'),'Next')"></div>
				<div ng-class="['clickable','glyphicon','glyphicon-random',{'randomOn': russ.nowplaying.isShuffle}]" uib-btn-checkbox ng-model="russ.nowplaying.isShuffle" btn-checkbox-true="true" btn-checkbox-false="false" ng-click="russ.nowplaying.toggleShuffleMode()"></div>
			</div>
			
<!------------------------------------------------------- Zone Volume  ------------------------------------------------------------->		
			<div class="zoneVolume" ng-init="volumeSlider = { 'item': russ.sysInfo.getZoneChannel('volume'), 'vertical': false, 'floor': 0, 'ceil': 100, step: 2, 'hidelabel': false, 'hidelimits': true, 'hidepointer': false, 'showticks': false, 'bigslider': false }">
				<widget-slider ng-model="volumeSlider"></widget-slider>
			</div>
			
<!------------------------------------------------------- Zone Mute/Source/Favorite------------------------------------------------------->		
			<div class="srcMisc">
				<div class="zoneMute clickable clickable glyphicon glyphicon-volume-{{itemValue(russ.sysInfo.getZoneChannel('mute'))=='ON' ? 'off' : 'up'}}" ng-click="sendCmd(russ.sysInfo.getZoneChannel('mute'),itemValue(russ.sysInfo.getZoneChannel('mute'))=='ON' ? 'OFF' : 'ON')"></div>
				<div class="srcMiddle clickable" ng-click="russ.page.setPage('srcSelection')">
					<div class="srcIcon glyphicon glyphicon-music"></div>
					<div class="srcName" ng-bind="itemValue(russ.sysInfo.getSourceChannel('name'))" ></div>
				</div>
				<div class="glyphicon glyphicon-star-empty zoneFavorite clickable" ng-click="russ.page.setPage('sysFavorites')"></div>
			</div>
		</div>

<!------------------------------------------------------- Zone Audio Settings  ------------------------------------------------------------->		
		<div class="audioSettings" ng-if="russ.page.isPage('audio')">
			<div class="title well well-sm">
				<div class='titleText'>
					<!--<div class="glyphicon glyphicon-list"></div>-->
					<span>Settings</span>
				</div>
				<div class="glyphicon glyphicon-remove closeButton clickable" ng-click="russ.page.setPage('nowplaying')"></div>
			</div>
			<div class="audioArea flexTable">
				<div class="audioRow flexRow flexRowStart">
					<div class="setting">Loudness</div>
					<div class="value" ng-init="loudness=itemValue(russ.sysInfo.getZoneChannel('loudness'))">
						<button class="btn btn-primary" uib-btn-checkbox ng-model="loudness" btn-checkbox-true="'ON'" btn-checkbox-false="'OFF'" ng-click="sendCmd(russ.sysInfo.getZoneChannel('loudness'), itemValue(russ.sysInfo.getZoneChannel('loudness')) == 'ON' ? 'OFF' : 'ON')">{{ itemValue(russ.sysInfo.getZoneChannel('loudness'))}}</button>
					</div>
				</div>
				<div class="audioRow flexRow">
					<div class="setting">Bass</div>
					<div class="value" ng-init="bassSlider = { 'item': russ.sysInfo.getZoneChannel('bass'), 'vertical': false, 'floor': -10, 'ceil': 10, step: 1, 'hidelabel': false, 'hidelimits': true, 'hidepointer': false, 'showticks': t, 'bigslider': false, showSelectionBar: true }">
						<widget-slider ng-model="bassSlider"></widget-slider>
					</div>
				</div>
				<div class="audioRow flexRow">
					<div class="setting">Treble</div>
					<div class="value" ng-init="trebleSlider = { 'item': russ.sysInfo.getZoneChannel('treble'), 'vertical': false, 'floor': -10, 'ceil': 10, step: 1, 'hidelabel': false, 'hidelimits': true, 'hidepointer': false, 'showticks': false, 'bigslider': false }">
						<widget-slider ng-model="trebleSlider"></widget-slider>
					</div>
				</div>
				<div class="audioRow flexRow">
					<div class="setting">Balance</div>
					<div class="value" ng-init="balanceSlider = { 'item': russ.sysInfo.getZoneChannel('balance'), 'vertical': false, 'floor': -10, 'ceil': 10, step: 1, 'hidelabel': false, 'hidelimits': true, 'hidepointer': false, 'showticks': false, 'bigslider': false }">
						<widget-slider ng-model="balanceSlider"></widget-slider>
					</div>
				</div>
				<div class="audioRow flexRow">
					<div class="setting">Turn-on Volume</div>
					<div class="value" ng-init="turnonvolumeSlider = { 'item': russ.sysInfo.getZoneChannel('turnonvolume'), 'vertical': false, 'floor': 0, 'ceil': 100, step: 2, 'hidelabel': false, 'hidelimits': true, 'hidepointer': false, 'showticks': false, 'bigslider': false }">
						<widget-slider ng-model="turnonvolumeSlider"></widget-slider>
					</div>
				</div>
				<div class="audioRow flexRow">
					<div class="setting">Party Mode</div>
					<div class="value">
						<div class="btn-group" uib-dropdown>
							<button id="single-button" type="button" class="btn btn-primary" uib-dropdown-toggle>{{itemValue(russ.sysInfo.getZoneChannel('partymode'))}} <span class="caret"></span>
							</button>
							<ul class="dropdown-menu" uib-dropdown-menu role="menu" aria-labelledby="single-button">
								<li role="menuitem">
									<a ng-click="sendCmd(russ.sysInfo.getZoneChannel('partymode'), 'OFF')">OFF</a>
								</li>
								<li role="menuitem">
									<a ng-click="sendCmd(russ.sysInfo.getZoneChannel('partymode'), 'ON')">ON</a>
								</li>
								<li role="menuitem">
									<a ng-click="sendCmd(russ.sysInfo.getZoneChannel('partymode'), 'MASTER')">Master</a>
								</li>
							</ul>
						</div>
					</div>
				</div>
				<div class="audioRow flexRow">
					<div class="setting">Do Not Disturb</div>
					<div class="value" ng-init="doNotDisturb=itemValue(russ.sysInfo.getZoneChannel('donotdisturb'))">
						<button class="btn btn-primary" uib-btn-checkbox ng-model="doNotDisturb" btn-checkbox-true="'ON'" btn-checkbox-false="'OFF'" ng-click="sendCmd(russ.sysInfo.getZoneChannel('donotdisturb'), itemValue(russ.sysInfo.getZoneChannel('donotdisturb')) == 'ON' ? 'OFF' : 'ON')">{{ itemValue(russ.sysInfo.getZoneChannel('donotdisturb'))}}</button>
					</div>
				</div>
				<div class="audioRow flexRow flexRowLast">
					<div class="setting">All Rooms</div>
					<div class="value" ng-init="allOn=itemValue(russ.sysInfo.getRioChannel('allon'))">
						<button class="btn btn-primary" uib-btn-checkbox ng-model="allOn" btn-checkbox-true="'ON'" btn-checkbox-false="'OFF'" ng-click="sendCmd(russ.sysInfo.getRioChannel('allon'), itemValue(russ.sysInfo.getRioChannel('allon')) == 'ON' ? 'OFF' : 'ON')">{{ itemValue(russ.sysInfo.getRioChannel('allon'))}}</button>
					</div>
				</div>
			</div>
		</div>

<!------------------------------------------------------- Radio Keypad  ------------------------------------------------------------->		
		<div class="radioKeyPad" ng-if="russ.page.isPage('radioKeyPad')">
			<div class="title well well-sm">
				<div class='titleText'>
					<!--<div class="glyphicon glyphicon-volume-up"></div>-->
					<span>Keypad</span>
				</div>
				<div class="glyphicon glyphicon-remove closeButton clickable" ng-click="russ.page.setPage('nowplaying')"></div>
			</div>
			<div class="keyPadArea">
				<div class="display" ng-bind="itemValue(russ.sysInfo.getSourceChannel('channel'))"></div>
				<div class="keyPad">
					<button class="btn btn-primary firstCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease DigitOne')">1</button>
					<button class="btn btn-primary secondCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease DigitTwo')">2</button>
					<button class="btn btn-primary thirdCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease DigitThree')">3</button>
					<button class="btn btn-primary firstCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease DigitFour')">4</button>
					<button class="btn btn-primary secondCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease DigitFive')">5</button>
					<button class="btn btn-primary thirdCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease DigitSix')">6</button>
					<button class="btn btn-primary firstCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease DigitSeven')">7</button>
					<button class="btn btn-primary secondCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease DigitEight')">8</button>
					<button class="btn btn-primary thirdCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease DigitNine')">9</button>
					<button class="btn btn-primary secondCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease DigitZero')">0</button>
				</div>
				<div class="keyPadRow">
					<button class="btn btn-primary thirdCol" ng-click="sendCmd(russ.sysInfo.getZoneChannel('event'), 'KeyRelease Play')">AM/FM</button>
				</div>
			</div>
		</div>

<!------------------------------------------------------- Banks/Presets Selection  ------------------------------------------------------------->		
		<div class="assignPresetDialog dialog presetDialog" ng-if="russ.page.isPage('assignPreset')" >
			<div class="confirmMessage">Are you sure you wish to assign (Bank '<span class="confirmId">{{ russ.banks.tmpPreset.bankName() }}'</span>, Preset #<span class="confirmId">{{((russ.banks.tmpPreset.presetId - 1)% 6) + 1}}</span>) with what is currently playing?</div>
			<div class="overwriteMessage">
				<span>Preset Name: </span>
				<input class='overwriteName' type='text' ng-model="russ.banks.tmpPreset.presetName" placeholder="{{ itemValue(russ.sysInfo.getSourceChannel('channel')) }}"/>
			</div>

			<div class="buttonArea">
				<button class="btn btn-primary btn-ok" ng-click="russ.banks.tmpPreset.save();russ.page.priorPage();">OK</button>
				<button class="btn btn-primary btn-cancel" ng-click="russ.page.priorPage();">Cancel</button>
			</div>
		</div>

		<div class="overwritePresetDialog dialog presetDialog" ng-if="russ.page.isPage('overwritePreset')" >
			<div class="confirmMessage">Are you sure you wish to overwrite (Bank '<span class="confirmId">{{ russ.banks.tmpPreset.bankName() }}'</span>, Preset #<span class="confirmId">{{((russ.banks.tmpPreset.presetId - 1)% 6) + 1}}</span>) with what is currently playing?</div>
			<div class="overwriteNewName">
				<span>Preset Name: </span>
				<input class='confirmName' type='text' ng-model="russ.banks.tmpPreset.presetName" placeholder="{{ itemValue(russ.sysInfo.getSourceChannel('channel')) }}"/>
			</div>

			<div class="buttonArea">
				<button class="btn btn-primary btn-ok" ng-click="russ.banks.tmpPreset.save();russ.page.priorPage();">OK</button>
				<button class="btn btn-primary btn-cancel" ng-click="russ.page.priorPage();">Cancel</button>
			</div>
		</div>

		<div class="deletePresetDialog dialog presetDialog" ng-if="russ.page.isPage('deletePreset')" >
			<div class="confirmMessage">Are you sure you wish to delete the preset <span class="confirmName">{{russ.banks.tmpPreset.presetName}}</span> (Bank '<span class="confirmId">{{ russ.banks.tmpPreset.bankName() }}'</span>, Preset #<span class="confirmId">{{((russ.banks.tmpPreset.presetId - 1)% 6) + 1}}</span>)?</div>

			<div class="buttonArea">
				<button class="btn btn-primary btn-ok" ng-click="russ.banks.tmpPreset.remove();russ.page.priorPage();">OK</button>
				<button class="btn btn-primary btn-cancel" ng-click="russ.page.priorPage();">Cancel</button>
			</div>
		</div>

		<div class="configureBanksDialog" ng-if="russ.page.isPage('configureBanks')">
			<div class="title well well-sm">
				<div class='titleText'>
					<!--<div class="glyphicon glyphicon-wrench"></div>-->
					<span>Banks/Presets</span>
				</div>
				<div class="glyphicon glyphicon-remove closeButton clickable" ng-click="russ.page.setPage('nowplaying')"></div>
			</div>
			<div class="bankArea">
				<div class="bankActions">
					<div class="leftBank glyphicon glyphicon-chevron-left" ng-click="russ.banks.editor.leftBank()"></div>
					<div class="rightBank glyphicon glyphicon-chevron-right" ng-click="russ.banks.editor.rightBank()"></div>
					<div class="selectedBank" ><input ng-model="russ.banks.editor.bankName"/></div>
					<div class="saveBank"><button class="btn btn-primary" ng-click="russ.banks.editor.save()" ng-disabled="!russ.banks.editor.validName">Save</button></div>
				</div>
			</div>
			<div class="presetArea flexTable">
				<div ng-class="['presetRow', 'flexRow', {'flexRowFirst' : $first}, {'flexRowLast' : $last}]" ng-repeat="presetId in russ.banks.editor.presetIds">
					<div class="presetId">{{ (presetId - 1)%6 + 1 }}</div>
					<div class="presetName clickable" ng-bind="russ.lists.presets[presetId - 1].name" ng-click="russ.banks.handleAssign(presetId);"></div>
					<div class="presetFunctions" ng-if="russ.lists.presets[presetId - 1].valid">
						<button class="btn btn-primary" ng-click="russ.banks.handleOverwrite(presetId);">
							<span class="glyphicon glyphicon-log-in"></span>
						</button>
						<button class="btn btn-primary" ng-click="russ.banks.handleDelete(presetId)">
							<span class="glyphicon glyphicon-trash"></span>
						</button>
					</div>
					<div class="presetFunctions" ng-if="!russ.lists.presets[presetId - 1].valid">
						<button class="btn btn-primary" ng-click="russ.banks.handleAssign(presetId)">
							<span class="glyphicon glyphicon-plus"></span>
						</button>
					</div>
				</div>
			</div>
		</div>

<!------------------------------------------------------- Zone Selection  ------------------------------------------------------------->		
		<div class="zoneSelection" ng-if="russ.page.isPage('zoneSelection')">
			<div class="title well well-sm">
				<div class='titleText'>
					<!--<div class="glyphicon glyphicon-music"></div>-->
					<span>Zones</span>
				</div>
				<div class="glyphicon glyphicon-remove closeButton clickable" ng-click="russ.page.setPage('nowplaying')"></div>
			</div>
			<div class="zonesInfoNone" ng-if="russ.lists.zone.length === 0">No zones defined</div>
			<div class="zones flexTable" ng-if="russ.lists.zones.length > 0">
				<div ng-class="['zonesInfo', 'flexRow', {'flexRowFirst' : $first}, {'flexRowLast' : $last}]" ng-repeat="x in russ.lists.zones | orderBy:'name'">
					<!--<button class="srcSelect btn btn-primary" ng-click="russ.page.setPage('nowplaying'); sendCmd(russ.sysInfo.getZoneChannel('source'), x.id);">Select</button>-->
					<div class="zoneName clickable" ng-click="russ.page.setPage('nowplaying'); russ.sysInfo.selectZone(x);">{{x.name}}</div>
					<div class="zonePlaying glyphicon glyphicon-volume-up" ng-hide="x.zoneId != russ.sysInfo.zoneId || x.controllerId != russ.sysInfo.controllerId"></div>
					<div class='zonePower' >
						<i class="glyphicon glyphicon-off clickable" ng-click="russ.sysInfo.toggleZonePower(x)" ng-style="russ.sysInfo.getZonePower(x) == 'ON' ? {'color': 'green'} : {'color': 'red'}"></i>
					</div>
				</div>
			</div>
		</div>

<!------------------------------------------------------- Source Selection  ------------------------------------------------------------->		
		<div class="srcSelection" ng-if="russ.page.isPage('srcSelection')">
			<div class="title well well-sm">
				<div class='titleText'>
					<!--<div class="glyphicon glyphicon-music"></div>-->
					<span>Sources</span>
				</div>
				<div class="glyphicon glyphicon-remove closeButton clickable" ng-click="russ.page.setPage('nowplaying')"></div>
			</div>
			<div class="sourcesInfoNone" ng-if="russ.lists.sources.length === 0">No sources defined</div>
			<div class="sources flexTable" ng-if="russ.lists.sources.length > 0">
				<div ng-class="['sourcesInfo', 'flexRow', {'flexRowFirst' : $first}, {'flexRowLast' : $last}]" ng-repeat="x in russ.lists.sources | orderBy:'id'">
					<!--<button class="srcSelect btn btn-primary" ng-click="russ.page.setPage('nowplaying'); sendCmd(russ.sysInfo.getZoneChannel('source'), x.id);">Select</button>-->
					<div class="srcName clickable" ng-click="russ.page.setPage('nowplaying'); sendCmd(russ.sysInfo.getZoneChannel('source'), x.id);">{{x.name}}</div>
					<div class="srcPlaying glyphicon glyphicon-volume-up" ng-hide="x.id != itemValue(russ.sysInfo.getZoneChannel('source'))"></div>
				</div>
			</div>
		</div>

<!------------------------------------------------------- Favorites ------------------------------------------------------------->		
		<div class="sysFavorites" ng-if="russ.page.isPage('sysFavorites')" ng-init="russ.favorites.tmpInfo.name = russ.sysInfo.getSuggestedFavoriteName()">
			<div class="title well well-sm">
				<div class='titleText'>
					<!--<div class="glyphicon glyphicon-star-empty"></div>-->
					<span>Favorites</span>
				</div>
				<div class="glyphicon glyphicon-remove closeButton clickable" ng-click="russ.page.setPage('nowplaying')"></div>
			</div>
			<div class="favorites">
				<div class="addFavorite">
					<div class="addFavoriteTitle">Create a favorite from what's playing now.</div>
					<div class="addFavoriteArea">
						<button class="btn btn-primary" ng-click="russ.favorites.tmpInfo.id = russ.favorites.nextValidSlot; russ.page.setPage('addFavorite')" ng-disabled="!russ.favorites.tmpInfo.validName">
							<span class="glyphicon glyphicon-plus"></span>
						</button>
						<input type='text' ng-model="russ.favorites.tmpInfo.name"/>
						<span ng-if="russ.favorites.nextValidSlot>= 1"> as System Fav. #{{russ.favorites.nextValidSlot}}</span>
						<span ng-if="russ.favorites.nextValidSlot < 1"> as System Fav. #</span>
						<select ng-if="russ.favorites.nextValidSlot < 1" ng-model="russ.favorites.tmpInfo.id" ng-options="fav.id as fav.id for fav in russ.lists.favorites">
						</select>
					</div>
				</div>

				<div class="favoritesInfoNone" ng-if="(russ.lists.favorites |  filter:{ valid: true }).length === 0">No favorites defined</div>
				<div class="favoritesInfo flexTable" ng-if="(russ.lists.favorites |  filter:{ valid: true }).length > 0">
					<div ng-class="['favoritesRow', 'flexRow', {'flexRowFirst' : $first}, {'flexRowLast' : $last}]" ng-repeat="x in russ.lists.favorites |  filter:{ valid: true }  | orderBy:'id'">
						<div class="favId">{{x.id}} </div>
						<!--<button class="btn btn-primary favSelect" ng-click="russ.favorites.restoreFavorite(x.id); russ.page.setPage('nowplaying');">Select</button>-->
						<div class="favName clickable" ng-click="russ.favorites.restoreFavorite(x.id); russ.page.setPage('nowplaying');"><span>{{x.name}}</span></div>
						<button class="btn btn-primary favOverite" ng-click="russ.favorites.tmpInfo.id = x.id; russ.favorites.tmpInfo.name = itemValue(russ.sysInfo.getSourceChannel('channelname')); russ.page.setPage('overwriteFavorite')">
							<span class="glyphicon glyphicon-log-in"></span>
						</button>
						<button class="btn btn-primary favDelete" ng-click="russ.favorites.tmpInfo.setFrom(x.id); russ.page.setPage('deleteFavorite')">
							<span class="glyphicon glyphicon-trash"></span>
						</button>
					</div>
				</div>
			</div>
		</div>

		<div class="addFavoriteDialog dialog favoriteDialog" ng-if="russ.page.isPage('addFavorite')">
			<div class="confirmMessage">Please confirm that you wish to add system favorite <span class="confirmName">{{russ.favorites.tmpInfo.name}}</span> (id #<span class="confirmId">{{russ.favorites.tmpInfo.id}}</span>)</div>
			<div class="overwriteMessage alert alert-warning" ng-if="russ.lists.favorites[tmpInfo.id-1].valid">
				You will be overwriting an existing favorite called <span class="overwriteName">{{russ.lists.favorites[tmpInfo.id-1].name}}</span>.  By continuing, you will update the name and the favorite to what's playing now
			</div>
			<div class="buttonArea">
				<button class="btn btn-primary btn-ok" ng-click="russ.favorites.addFavorite(russ.favorites.tmpInfo.id, russ.favorites.tmpInfo.name);russ.page.priorPage();">OK</button>
				<button class="btn btn-primary btn-cancel" ng-click="russ.page.priorPage();">Cancel</button>
			</div>
		</div>

		<div class="deleteFavoriteDialog dialog favoriteDialog" ng-if="russ.page.isPage('deleteFavorite')" >
			<div class="confirmMessage">Are you sure you wish to delete system favorite <span class="confirmName">{{russ.favorites.tmpInfo.name}}</span> (id #<span class="confirmId">{{russ.favorites.tmpInfo.id}}</span>)?</div>
			<div class="buttonArea">
				<button class="btn btn-primary btn-ok" ng-click="russ.favorites.deleteFavorite(russ.favorites.tmpInfo.id); russ.page.priorPage()">OK</button>
				<button class="btn btn-primary btn-cancel" ng-click="russ.page.priorPage();">Cancel</button>
			</div>
		</div>
		<div class="overwriteFavoriteDialog dialog favoriteDialog" ng-if="russ.page.isPage('overwriteFavorite')" >
			<div class="confirmMessage">Are you sure you wish to overwrite system favorite (id #<span class="confirmId">{{russ.favorites.tmpInfo.id}}</span>) with what is currently playing?</div>
			<div class="overwriteNewName">
				<span>Change the name to: </span>
				<input class='confirmName' type='text' ng-model="russ.favorites.tmpInfo.name"/>
			</div>

			<div class="buttonArea">
				<button class="btn btn-primary btn-ok" ng-click="russ.favorites.overwriteFavorite(russ.favorites.tmpInfo.id, russ.favorites.tmpInfo.name);russ.page.priorPage();">OK</button>
				<button class="btn btn-primary btn-cancel" ng-click="russ.page.priorPage();">Cancel</button>
			</div>
		</div>
		
<!------------------------------------------------------- Media Management Screens ------------------------------------------------------------->		
		<div class="mmmenu mmscreen" ng-if="russ.page.isPage('mmmenu')">
			<div class="title well well-sm">
				<div class='titleText'>
					<!--<div class="glyphicon glyphicon-music"></div>-->
					<span>{{ russ.mm.title }}</span>
					<img src="/static/Russound/images/spinning.gif" ng-if="russ.mm.isWaiting"/>
				</div>
				<div class="glyphicon glyphicon-remove closeButton clickable" ng-click="russ.mm.close()"></div>
			</div>
			
			<div ng-class="['mmmenuarea', 'flexTable', { waiting : russ.mm.isWaiting}]" ng-if="!russ.mm.isWaiting" >
			  <div ng-class="['menuitem', 'flexRow', {'flexRowFirst' : $first}, {'flexRowLast' : $last}]" ng-repeat="menu in russ.mm.menuitems" ng-click="russ.mm.selectItem(menu.id)">
				<div class="menuIcon" ng-if="russ.mm.hasMenuIcon()"><img ng-src='/static/Russound/images/{{russ.mm.menuIcon(menu.attributes)}}'/></div>
				<div class="menuText clickable" ng-bind="menu.text"></div>
				<!--<div class="" ng-bind="menu.attributes + ';' + menu.isFirst +';'+ menu.isLast"></div>-->
				<div class="menuPlaying menuStatus glyphicon glyphicon-volume-up" ng-if="russ.mm.isPlaying(menu.attributes)"></div>
				<div class="menuActive menuStatus glyphicon glyphicon-ok" ng-if="russ.mm.isActive(menu.attributes)"></div>
				<div class="menuSubmenu menuStatus glyphicon glyphicon-chevron-right" ng-if="menu.isMenu === true"></div>
			  </div>
			</div>
			
			<div ng-class="['buttonArea', { waiting : russ.mm.isWaiting}]">
				<div class='leftButtonArea'>
					<button class="btn btn-primary" ng-click="russ.mm.pageDown()" ng-disabled="russ.mm.hasFirst()"><span class="glyphicon glyphicon-chevron-up"></span></button>
					<button class="btn btn-primary" ng-click="russ.mm.pageUp() "ng-disabled="russ.mm.hasLast()"><span class="glyphicon glyphicon-chevron-down"></span></button>
				</div>
				<div class='rightButtonArea'>
					<button class="btn btn-primary" ng-click="russ.mm.back()">Back</button>
					<button class="btn btn-primary" ng-click="russ.mm.home()">Home</button>
				</div>
			</div>
		</div>

		<div class="mminfo mmscreen" ng-if="russ.page.isPage('mminfo')">
			<div class="title well well-sm">
				<div class='titleText'>
					<!--<div class="glyphicon glyphicon-music"></div>-->
					<span>{{ russ.mm.title }}</span>
					<img src="/static/Russound/images/spinning.gif" ng-if="russ.mm.isWaiting"/>
				</div>
				<div class="glyphicon glyphicon-remove closeButton clickable" ng-click="russ.mm.close()"></div>
			</div>
			<div ng-class="['mmmenuarea', { waiting : russ.mm.isWaiting}]">
				<div class="mminfotext" ng-bind="russ.mm.infoText"></div>
			</div>
			<div ng-class="['buttonArea', { waiting : russ.mm.isWaiting}]">
				<button class="btn btn-primary btn-ok" ng-if="russ.mm.hasBackButton()" ng-click="russ.mm.back()" ng-bind="russ.mm.backText"></button>
				<button class="btn btn-primary btn-ok" ng-click="russ.mm.ok()" ng-bind="russ.mm.okText"></button>
			</div>
		</div>

		<div class="mmentry mmscreen" ng-if="russ.page.isPage('mmentry')">
			<div class="title well well-sm">
				<div class='titleText'>
					<!--<div class="glyphicon glyphicon-music"></div>-->
					<span>{{ russ.mm.title }}</span>
					<img src="/static/Russound/images/spinning.gif" ng-if="russ.mm.isWaiting"/>
				</div>
				<div class="glyphicon glyphicon-remove closeButton clickable" ng-click="russ.mm.close()"></div>
			</div>
			<div ng-class="['mmmenuarea', { waiting : russ.mm.isWaiting}]">
				<div class="mmform">
					<div class="formitem" ng-bind="russ.mm.form.help"></div>
					<div class="entryitem"><input type="text" ng-model="russ.mm.form.text" ng-disabled="russ.mm.form.isSubmitting"/></div>
				</div>
			</div>
			<div ng-class="['buttonArea', { waiting : russ.mm.isWaiting}]">
				<button class="btn btn-primary btn-ok" ng-click="russ.mm.back()" ng-disabled="russ.mm.form.isSubmitting">Back</button>
				<button class="btn btn-primary btn-ok" ng-click="russ.mm.form.submit()" ng-disabled="russ.mm.form.isSubmitting || russ.mm.form.okDisabled">Submit</button>
			</div>
		</div>

	</div>
</div>